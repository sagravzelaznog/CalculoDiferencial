// REGLAS DE SEGURIDAD PARA FIRESTORE
// Copia estas reglas en Firebase Console > Firestore Database > Rules

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Función para verificar si el usuario es administrador
    function isAdmin() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Función para verificar si el usuario es el propietario del documento
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // Colección de usuarios
    match /users/{userId} {
      // Los usuarios pueden leer y escribir sus propios datos
      allow read, write: if isOwner(userId);
      
      // Los administradores pueden leer todos los usuarios
      allow read: if isAdmin();
      
      // Los administradores pueden actualizar roles
      allow update: if isAdmin() && 
        request.resource.data.keys().hasAll(['role']) &&
        request.resource.data.role in ['student', 'admin'];
    }
    
    // Colección de progreso del curso
    match /progress/{userId} {
      // Los usuarios pueden leer y escribir su propio progreso
      allow read, write: if isOwner(userId);
      
      // Los administradores pueden leer todo el progreso
      allow read: if isAdmin();
    }
    
    // Colección de actividades del curso
    match /activities/{activityId} {
      // Solo los usuarios autenticados pueden leer las actividades
      allow read: if request.auth != null;
      
      // Solo los administradores pueden crear/actualizar actividades
      allow create, update, delete: if isAdmin();
    }
    
    // Colección de estadísticas (solo lectura para usuarios autenticados)
    match /stats/{statId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
  }
}

// REGLAS ADICIONALES RECOMENDADAS:

// 1. Para desarrollo/testing, puedes usar reglas más permisivas:
/*
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
  }
}
*/

// 2. Para producción, considera agregar validaciones adicionales:
/*
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow create: if request.auth != null && 
        request.auth.uid == userId &&
        request.resource.data.email == request.auth.token.email &&
        request.resource.data.role == 'student';
      
      allow update: if isOwner(userId) && 
        !request.resource.data.diff(resource.data).affectedKeys().hasAny(['role']) ||
        isAdmin();
    }
  }
}
*/
